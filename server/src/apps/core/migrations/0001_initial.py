# Generated by Django 5.2.5 on 2025-08-20 03:52

import django.contrib.gis.db.models.fields
import django.core.validators
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="ParkingLot",
            fields=[
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("title", models.CharField(max_length=200)),
                ("description", models.TextField(blank=True)),
                ("address", models.TextField()),
                ("location", django.contrib.gis.db.models.fields.PointField(srid=4326)),
                (
                    "latitude",
                    models.DecimalField(
                        blank=True, decimal_places=8, max_digits=10, null=True
                    ),
                ),
                (
                    "longitude",
                    models.DecimalField(
                        blank=True, decimal_places=8, max_digits=11, null=True
                    ),
                ),
                (
                    "spot_type",
                    models.CharField(
                        choices=[
                            ("garage", "Parking Garage"),
                            ("lot", "Parking Lot"),
                            ("street", "Street Parking"),
                            ("driveway", "Private Driveway"),
                            ("other", "Other"),
                        ],
                        default="other",
                        max_length=20,
                    ),
                ),
                (
                    "price_per_hour",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=6,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                (
                    "available_spots",
                    models.PositiveIntegerField(
                        default=0,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                (
                    "availability",
                    models.CharField(
                        choices=[
                            ("weekdays_9_5", "Weekdays (9-5)"),
                            ("weekends", "Weekends"),
                            ("24_7", "24/7"),
                            ("custom", "Custom Hours"),
                        ],
                        max_length=20,
                    ),
                ),
                ("features", models.JSONField(blank=True, default=list)),
                ("instructions", models.TextField(blank=True)),
                (
                    "owner",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="owned_spots",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "parking_lot",
            },
        ),
        migrations.CreateModel(
            name="Booking",
            fields=[
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("booking_id", models.CharField(max_length=20, unique=True)),
                ("start_time", models.DateTimeField()),
                ("end_time", models.DateTimeField()),
                ("duration_hours", models.DecimalField(decimal_places=2, max_digits=4)),
                ("total_price", models.DecimalField(decimal_places=2, max_digits=8)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("confirmed", "Confirmed"),
                            ("active", "Active"),
                            ("completed", "Completed"),
                            ("cancelled", "Cancelled"),
                            ("expired", "Expired"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                ("payment_intent_id", models.CharField(blank=True, max_length=100)),
                ("notes", models.TextField(blank=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="booking",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "spot",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="booking",
                        to="core.parkinglot",
                    ),
                ),
            ],
            options={
                "db_table": "booking",
            },
        ),
        migrations.AddIndex(
            model_name="parkinglot",
            index=models.Index(
                fields=["location"], name="parking_lot_locatio_1b4b87_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="booking",
            index=models.Index(
                fields=["user", "status"], name="booking_user_id_1390f3_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="booking",
            index=models.Index(
                fields=["spot", "start_time", "end_time"],
                name="booking_spot_id_e347e2_idx",
            ),
        ),
    ]
